<html window-icon="images/rx.ico" window-frame="extended" window-resizable>
<head>
<title>Minimalistic Sciter demo</title>
<style>
@import url(general.css);
@import url(vgrid.css);
</style>
<script type="text/tiscript">
  include "menubar.tls";
  function refreshMirrors() {
    var future = promise();
    var rqp = { 
      type: #get, 
      url: "http://serverlist.renegade-x.com/servers.jsp", 
      success: function(result, status) {
        stdout.println("Got a result from #get");
        var records = new Array(result.length);
        for (var i=0; i<result.length; i++) {
          records[i] = {
            index: i,
            name: result[i].Name,
            map: result[i]["Current Map"],
            players: result[i]["Players"] + "/" + result[i]["Variables"]["Player Limit"],
            latency: "0ms",
            data: result[i],
          };
        }
        var vlist = $(table);
        stdout.println("got this far");
        if(vlist.value != null) {
          stdout.println(vlist.value);
          stdout.println(vlist.tbody.currentIndex);
        }
        vlist.value = records;
        stdout.println("also got this far");
        stdout.println(vlist.tbody.currentIndex);
        stdout.println("but not this far");
        future(true, records);
      },
      onerror: function(data, status) {
        stdout.println("Got a error from #get");
        promise.resolve(false, data);
      },
      returns: true,
    };
    View.request(rqp);
    return future;
  }

  async function self.ready() {
    stdout.println("frontpage loaded");
    var vlist = $(table);
    await refreshMirrors();
    vlist.tbody.currentIndex = 0;
    vlist << event change {
      stdout.println("change", vlist.tbody.currentIndex)
    }

    vlist << event dblclick $(tr) {
      stdout.println("dblclick", vlist.tbody.currentIndex)
      stdout.println(vlist.value[vlist.tbody.currentIndex]["data"].IP + ":" + vlist.value[vlist.tbody.currentIndex]["data"].Port);
      refreshMirrors();
      stdout.println(vlist.value[vlist.tbody.currentIndex]["data"].IP + ":" + vlist.value[vlist.tbody.currentIndex]["data"].Port);
    }

    vlist << event click $(th.sortable) 
    {
      this.sortVlist();
    }
  }

  function sortVlist() {
    var name = this.attributes["name"];
    var order = this.attributes["order"];
    function cmpascend(a,b) {
      if( a[name] > b[name] ) return 1;
      else if (a[name] < b[name]) return -1;
      return 0;
    }
    function cmpdescend(a,b) {
      if( a[name] < b[name] ) return 1;
      else if (a[name] > b[name]) return -1;
      return 0;
    }
    if ( order == "ascend" ) {
       this.attributes["order"] = "descend" ;
       vlist.value.sort(cmpdescend);
    } else if ( order == "descend" ){
       this.attributes["order"] = "ascend" ;
       vlist.value.sort(cmpascend);
    } else {
      // the column was not ordered before, remove @order from other columns
      if(var psort = this.parent.$(th[order]) ) {
        psort.attributes["order"] = undefined; // remove the attribute from previously ordered sibling
      }
      // set this column as ascend order:
      this.attributes["order"] = "ascend";
      vlist.value.sort(cmpascend);
    }
  }
</script>
</head>
<body>
<include src="menubar.htm" />
<div id="flow-container">
  <div class="top-margin" style="display: inline-block; margin:auto; max-width:1600px; background-image: url(images/RenX_Logo.png); background-position: center; background-repeat: stretch keep-ratio;">
    <div #IGN-container style="flow:vertical;vertical-align:middle;">
      <p>WELCOME</p>
      <h1>SonnyX</h1>
    </div>
    <div style="width:*;"></div>
    <div #Ver-container style="flow:vertical;text-align:right;vertical-align:middle;">
      <p>Version</p>
      <h1>5.367</h1>
    </div>
  </div>
  <div class="horizontal-margin"></div>
  <div class="horizontal-margin"></div>
  <div class="bottom-margin"></div>
  <div id="main-content">
    <div #server-container>
      <div #header>
        <h2>SERVERS</h2>
        <p>44 Players Online</p>
        <div #search-bar>
          //some text-entry or smth.
        </div>
        <div #refresh-button>
          <picture />
        </div>
      </div>
      <table resizeable>
        <thead>
          <tr>
            <th(name).sortable>Server Name</th>
            <th(map).sortable>Map</th>
            <th(players).sortable>Players</th>
            <th(latency).sortable>Ping</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td(name)></td>
            <td(map)></td>
            <td(players)></td>
            <td(latency)></td>
          </tr>
        </tbody>
      </table>
      <div #server-info>
        lol
      </div>
    </div>
    <div #chat-container>
      <div #header>
        <h1>CHAT LOBBY</h1>
      </div>
      <div #chat-display> </div>
      <div #reply-chat>
        <input type="text">
      </div>
    </div>
  </div>
</div>
</body>
</html>
